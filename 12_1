import time

class MyTime:
    def __init__(self,*args): #string_time = None, hours = None, minutes = None, seconds = None, ):
        if len(args) == 0:
            t = time.localtime()
            self.__hours = t.tm_hour
            self.__minutes = t.tm_min
            self.__seconds = t.tm_sec
        elif len(args) == 3:
            self.__hours = args[0]
            self.__minutes = args[1]
            self.__seconds = args[2]

    def __init__(self):
        t = time.localtime()
        self.__init__(t.tm_hour, t.tm_min, t.tm_sec)



    @property
    def hours(self):
        return self.__hours

    @hours.setter
    def hours(self, hours):
        self.__hours = hours

    @property
    def minutes(self):
        return self.__minutes

    @minutes.setter
    def minutes(self, minutes):
        self.__minutes = minutes

    @property
    def seconds(self):
        return self.hours

    @seconds.setter
    def seconds(self, seconds):
        self.__seconds = seconds


class dog:
    def __init__(self,g):
        self.g = g


def kek(*args):
    print(len(args))

x = 10
x.__add__(25)
print(x.__add__(1111))
g = dog(111)
kek(g)
